

Usage:
  bamboo (-a|--action) <action> [(-f|--file) <file>] [--encoding <encoding>] [--debug] [-v|--verbose] [--quiet] [--outputFormat
  <outputFormat>] [--sql <sql>] [--driver <driver>] [--url <url>] [--host <host>] [--port <port>] [--database <database>] [--dbUser
  <dbUser>] [--dbPassword <dbPassword>] [--propertyFile <propertyFile>] [--common <common>] [--findReplace <findReplace>]
  [--findReplaceRegex <findReplaceRegex>] [--list <list>] [--continue] [--simulate] (-s|--server) <server> (-u|--user) <user>
  (-p|--password) <password> [--login <login>] [--service <service>] [-l|--loginFromStandardInput] [--api <api>] [--project <project>]
  [--toProject <toProject>] [--build <build>] [--plan <plan>] [--toPlan <toPlan>] [--job <job>] [--name <name>] [--description
  <description>] [--artifact <artifact>] [--labels <labels>] [--searchLabels <searchLabels>] [--issues <issues>] [--expand <expand>]
  [--attribute <attribute>] [--comment <comment>] [--taskKey <taskKey>] [--fields <fields>] [--field1 <field1>] [--field2 <field2>]
  [--field3 <field3>] [--field4 <field4>] [--value1 <value1>] [--value2 <value2>] [--value3 <value3>] [--value4 <value4>] [--request
  <request>] [--requestParameters <requestParameters>] [--id <id>] [--number <number>] [--timeout <timeout>] [--wait] [--favourite]
  [--help]


	Provides capability to make requests to a remote server.
	Required parameters: action, server, password.
	Optional parameters: user (likely required for your installation).
	Other required and optional parameters depending on action requested.


  (-a|--action) <action>
        Requested operation to perform. Valid actions (not case sensitive) are:
        
        login - Login to remote server. Returns login token.
        	 Required parameters: password
        	 Optional parameters: user
        logout - Logout of remote server.
        run - Run actions from a file or standard input.
        	 Required parameters: file or standard input
        	 Optional parameters: common, continue, simulate, encoding, findReplace, findReplaceRegex
        runFromSql - Run actions generated.by SQL provided by the sql parameter, a file, or standard input
        	 Required parameters: sql or file or standard input
        	 Optional parameters: common, host, driver, database, host, port, url, dbUser, dbPassword,
        	 propertyFile, continue, simulate, encoding, findReplace, findReplaceRegex
        runFromCsv - Run actions generated from a CSV file.
        	 Required parameters: file
        	 Optional parameters: common, propertyFile, continue, quiet, simulate, encoding, findReplace, findReplaceRegex
        runFromList - Run actions for each entry in a list. When file is provided, each action in the file augmented by the common
        parameter will be run for each entry. Otherwise, just the action specified by the common parameter will be run. @entry@ will
        be replaced with the entry value.
        	 Required parameters: list
        	 Optional parameters: file, common, continue, quiet, simulate, encoding, findReplace, findReplaceRegex
        getClientInfo - Get information about the this client tool.
        getServerInfo - Get information about the Bamboo server.
        renderRequest - Render url based request.
        	 Required parameters: request
        	 Optional parameters: requestParameters, build, file, encoding
        getProjectList - Get a list of projects.
        	 Optional parameters: file, attribute, expand
        getPlanList - Get a list of build plans.
        	 Optional parameters: project, favourite, file, attribute, expand
        getBuildList - Get a list of builds.
        	 Optional parameters: file, attribute, favourite, expand, labels, issues
        getBuildQueueList - Get a list of builds waiting in the build queue. Subset by project or build.
        	 Optional parameters: project, build, file
        getLabelList - Get a list of labels for a build.
        	 Required parameters: build
        	 Optional parameters: number, file
        getCommentList - Get a list of comments for a build.
        	 Required parameters: build
        	 Optional parameters: number, file
        getLatestBuildResults - Get build results for a build or project.
        	 Required parameters: build or project
        	 Optional parameters: file
        triggerBuild - Triggers a build if there are source changes.
        	 Required parameters: build
        queueBuild - Queue a build to run. Specify build key.
        	 Required parameters: build
        	 Optional parameters: wait, timeout, fields, field1, value1, field2, value2, field3, value3, field4, value4
        addComment - Add a comment to a build.
        	 Required parameters: build, comment
        	 Optional parameters: number, findReplace, findReplaceRegex, file, encoding
        addLabels - Add a comma separated list of labels to a build.
        	 Required parameters: build, labels
        	 Optional parameters: number
        removeLabels - Delete labels from a build. Labels can be a comma separated list or regex. Either build or search terms
        (searchLabels, issues) must be provided
        	 Required parameters: labels
        	 Optional parameters: build, number, searchLabels, issues, favourite
        getProject - Get project information.
        	 Required parameters: project
        	 Optional parameters: file
        deleteProject - Delete project and all project plans.
        	 Required parameters: project
        	 Optional parameters: file
        enableProject - Enable all project plans.
        	 Required parameters: project
        disableProject - Disable all project plans.
        	 Required parameters: project
        cloneProject - Clone each build plan in a project to another project.
        	 Required parameters: project, toProject
        getPlan - Get build plan information.
        	 Required parameters: plan
        clonePlan - Clone a build plan.
        	 Required parameters: plan, toPlan
        	 Optional parameters: name, description,
        deletePlan - Delete a build plan.
        	 Required parameters: plan
        enablePlan - Enable a build plan to run.
        	 Required parameters: plan
        disablePlan - Disable a build plan from running.
        	 Required parameters: plan
        getArtifact - Download a copy of a build artifact into a file.
        	 Required parameters: build, artifact, file
        	 Optional parameters: number
        getBuild - Get build result.
        	 Required parameters: build
        	 Optional parameters: number, expand, file
        verifyBuild - Verify build was successful.
        	 Required parameters: build
        	 Optional parameters: number
        getLatestBuildNumber - Get the number of the last completed build.
        	 Required parameters: build
        addTask - Add a task to a build plan job. Bamboo 3.3 and above.
        	 Required parameters: plan, job, taskKey
        	 Optional parameters: fields, field1, value1, field2, value2, field3, value3, field4, value4
        updateTask - Update a task in a build plan job. Bamboo 3.3 and above.
        	 Required parameters: plan, job, id
        	 Optional parameters: fields, field1, value1, field2, value2, field3, value3, field4, value4
        removeTask - Remove a task from a build plan job. Bamboo 3.3 and above.
        	 Required parameters: plan, job, id

  [(-f|--file) <file>]
        Path to file based content or result output. Use - for standard input.

  [--encoding <encoding>]
        Character encoding (character set) for text based file content - must be an encoding supported by your JAVA platform.

  [--debug]
        Requests detail debug output. Optional for all actions.

  [-v|--verbose]
        Requests verbose output to help with problem determination. Optional for all actions.

  [--quiet]
        Limit some output messages. Optional for all actions.

  [--outputFormat <outputFormat>]
        Specify output format for an action. (default: 1)

  [--sql <sql>]
        SQL select statement used to generate a run script.

  [--driver <driver>]
        JDBC driver class or predefined value: postgresql, mysql, mssql, oracle, or db2400. Required for SQL actions.

  [--url <url>]
        Action specific setting. Example: Database access url for SQL actions. Optional when host is provided.

  [--host <host>]
        Database host server for SQL actions. Not used if url is provided. (default: localhost)

  [--port <port>]
        Database host port for SQL actions. Optional, defaults to database default. Not used if url is provided.

  [--database <database>]
        Database name is required for SQL actions.

  [--dbUser <dbUser>]
        Database user name. Defaults to user.

  [--dbPassword <dbPassword>]
        Database user password. Defaults to password.

  [--propertyFile <propertyFile>]
        Property file with mapping information.

  [--common <common>]
        Common parameter string added to all run actions.

  [--findReplace <findReplace>]
        Find and replace text. Comma separated list of colon separated pairs. Single quote values containing a delimiter. Embedded
        quotes must be doubled.

  [--findReplaceRegex <findReplaceRegex>]
        Find and replace text with a regular expression. Comma separated list of colon separated pairs. Single quote values
        containing a delimiter. Embedded quotes must be doubled.

  [--list <list>]
        Comma separated list of entries. Single quote values containing a delimiter. Embedded quotes must be doubled.

  [--continue]
        Continue processing even after errors are encountered.

  [--simulate]
        Simulate running actions. Log the action that would be taken.

  (-s|--server) <server>
        Server URL.

  (-u|--user) <user>
        User name for remote login. (default: automation)

  (-p|--password) <password>
        User password for remote login.

  [--login <login>]
        Login token from previous login request.

  [--service <service>]
        Service address extension. (default: /rest/api)

  [-l|--loginFromStandardInput]
        Get login token from standard input.

  [--api <api>]
        API version. Some requests produce different results based on the api version used. Use 0 for latest. (default: 0)

  [--project <project>]
        Project key. Example: XXX

  [--toProject <toProject>]
        Project key to clone to.

  [--build <build>]
        Build key. Optionally, for some actions, may contain build number. Example: XXX-DEF or XXX-DEF-1

  [--plan <plan>]
        Build plan key containing the project key.  Example: XXX-DEF

  [--toPlan <toPlan>]
        Build plan key to be created. Example: XXX-DEF

  [--job <job>]
        Job key. Example: JOB1

  [--name <name>]
        Build plan name.

  [--description <description>]
        Build plan description.

  [--artifact <artifact>]
        Build artifact name. May be extended by a path name for locating files within an artifact representing a dirctory.

  [--labels <labels>]
        Comma or blank separated list of labels.

  [--searchLabels <searchLabels>]
        Comma or blank separated list of labels used for search.

  [--issues <issues>]
        Comma separated list of JIRA issue keys.

  [--expand <expand>]
        Expanded request information to obtain more detailed data on request.

  [--attribute <attribute>]
        Attribute to list.

  [--comment <comment>]
        Comment for an build

  [--taskKey <taskKey>]
        Task key. Example: com.atlassian.bamboo.plugins.scripttask:task.builder.script

  [--fields <fields>]
        Use to specify task specific fields or build variables and their values. A comma separated list of key:value pairs. Single
        quote the key:value pair if it contains a comma (,) or line breaks.

  [--field1 <field1>]
        Task specific field or build variable name. Complements the fields parameter. Value is specified by the value1 parameter.

  [--field2 <field2>]
        Task specific field or build variable name. Complements the fields parameter. Value is specified by the value2 parameter.

  [--field3 <field3>]
        Task specific field or build variable name. Complements the fields parameter. Value is specified by the value3 parameter.

  [--field4 <field4>]
        Task specific field or build variable name. Complements the fields parameter. Value is specified by the value4 parameter.

  [--value1 <value1>]
        Value corresponding to the field1 parameter name.

  [--value2 <value2>]
        Value corresponding to the field2 parameter name.

  [--value3 <value3>]
        Value corresponding to the field3 parameter name.

  [--value4 <value4>]
        Value corresponding to the field4 parameter name.

  [--request <request>]
        URL fragment for a request.

  [--requestParameters <requestParameters>]
        URL request parameters

  [--id <id>]
        Task id.

  [--number <number>]
        Build number. Defaults to latest. (default: 0)

  [--timeout <timeout>]
        Wait timeout in seconds. Use -1 to wait forever. (default: -1)

  [--wait]
        Wait for action to complete.

  [--favourite]
        Subset to favourites.

  [--help]
        Prints this help message.

