{csv:output=wiki|autoNumber=true|sortColumn=1|sortIcon=true}
Action, Category, Description, Required parameters, Optional parameters, Output formats
"[#Path] {anchor: Path}", "Paths", "either a file or directory.", , , 
"[#getChangeSetList] {anchor: getChangeSetList}", "Lists", "Get a list of change sets for path.", "[#repository], [#path]", "[#file]    [(-f|--file) <file>]         Path to file based content or result output. Use - for standard input.    [--[#encoding] <encoding>]         Character encoding (character set) for text based file content - must be an encoding supported by your JAVA platform.    [--debug]         Requests detail [#debug] output. Optional for all actions.    [-v|--verbose]         Requests [#verbose] output to [#help] with problem determination. Optional for all actions.    [--quiet]         Limit some output messages. Optional for all actions.    [--[#outputFormat] <outputFormat>]         Specify output format for an action. (default: 1)    [--[#sql] <sql>]         SQL select statement used to generate a run script.    [--[#driver] <driver>]         JDBC driver class or predefined value: postgresql, mysql, mssql, oracle, or db2400. Required for SQL actions.    [--[#url] <url>]         Action specific setting. Example: Database access url for SQL actions. Optional when [#host] is provided.    [--host <host>]         Database host [#server] for SQL actions. Not used if url is provided. (default: localhost)    [--[#port] <port>]         Database host port for SQL actions. Optional, defaults to [#database] default. Not used if url is provided.    [--database <database>]         Database name is required for SQL actions.    [--[#dbUser] <dbUser>]         Database [#user] name. Defaults to user.    [--[#dbPassword] <dbPassword>]         Database user password. Defaults to password.    [--[#propertyFile] <propertyFile>]         Property file with mapping information.    [--[#common] <common>]         Common parameter string added to all run actions.    [--[#findReplace] <findReplace>]         Find and replace text. Comma separated [#list] of colon separated pairs. Single quote values containing a delimiter. Embedded         quotes must be doubled.    [--[#findReplaceRegex] <findReplaceRegex>]         Find and replace text with a regular expression. Comma separated list of colon separated pairs. Single quote values         containing a delimiter. Embedded quotes must be doubled.    [--list <list>]         Comma separated list of entries. Single quote values containing a delimiter. Embedded quotes must be doubled.    [--continue]         Continue processing even after errors are encountered.    [--simulate]         Simulate running actions. Log the [#action] that would be taken.    (-s|--server) <server>         Server URL.    (-u|--user) <user>         User name for remote login. (default: automation)    (-p|--password) <password>         User [#password] for remote login.    [--[#login] <login>]         Login token from previous login request.    [--[#service] <service>]         Service address extension. (default: /api/rest/)    [-l|--loginFromStandardInput]         Get login token from standard input.    [--[#api] <api>]         API version. Some requests produce different results based on the api version used. Use 0 for latest. (default: 0)    [--[#path] <path>]", 
"[#getChangeSet] {anchor: getChangeSet}", , "Get change set details.", "[#repository], [#change]", "[#file]", 
"[#getClientInfo] {anchor: getClientInfo}", "Info", "Get information about the this client tool.", , , 
"[#getPathHistoryList] {anchor: getPathHistoryList}", "Lists", "Get a path history list.", "[#repository]", "[#path], [#file]", 
"[#getPathList] {anchor: getPathList}", "Lists", "Get a list of paths under a given path.", "[#repository]", "[#path], [#file]", 
"[#getRepositoryList] {anchor: getRepositoryList}", "Lists", "Get a list of repositories.", , "[#file]", 
"[#getRevision] {anchor: getRevision}", "Revisions", "Get revision details.", "[#repository], [#path], [#revision]", "[#file]", 
"[#getTagList] {anchor: getTagList}", "Lists", "Get a list of tags for a revision.", "[#repository], [#path], [#revision]", "[#file]", 
"[#login] {anchor: login}", "Misc", "Login to remote server. Returns login token.", "[#password]", "[#user]", 
"[#logout] {anchor: logout}", "Misc", "Logout of remote server.", , , 
"[#query] {anchor: query}", "Query", "Run an EyeQL query.", "[#repository], [#query]", "[#file]", 
"[#runFromCsv] {anchor: runFromCsv}", "Run", "Run actions generated from a CSV file.", "[#file]", "[#common], [#propertyFile], [#continue], [#quiet], [#simulate], [#encoding], [#findReplace], [#findReplaceRegex]", 
"[#runFromList] {anchor: runFromList}", "Lists", "Run actions for each entry in a list. When file is provided, each action in the file augmented by the common         parameter will be run for each entry. Otherwise, just the action specified by the common parameter will be run. @entry@ will         be replaced with the entry value.", "[#list]", "[#file], [#common], [#continue], [#quiet], [#simulate], [#encoding], [#findReplace], [#findReplaceRegex]", 
"[#runFromSql] {anchor: runFromSql}", "Run", "Run actions generated.by SQL provided by the sql parameter, a file, or standard input", "[#sql] or [#file] or standard input", "[#common], [#host], [#driver], [#database], host, [#port], [#url], [#dbUser], [#dbPassword],         	 [#propertyFile], [#continue], [#simulate], [#encoding], [#findReplace], [#findReplaceRegex]", 
"[#run] {anchor: run}", "Run", "Run actions from a file or standard input.", "[#file] or standard input", "[#common], [#continue], [#simulate], [#encoding], [#findReplace], [#findReplaceRegex]", 
{csv}


h3. Parameters
{include:ACLI:Shared - tips for documentation}
{csv:output=wiki|autoNumber=true|sortColumn=1|sortIcon=true}
Parameter, Short, Value, Description
"action {anchor:action}", "a", "(/)", 
"api {anchor:api}", , "(/)", "API version. Some requests produce different results based on the api version used. Use 0 for latest. (default: 0)"
"change {anchor:change}", , "(/)", "Change set id."
"common {anchor:common}", , "(/)", "Common parameter string added to all run actions."
"continue {anchor:continue}", , "(x)", "Continue processing even after errors are encountered."
"database {anchor:database}", , "(/)", "Database name is required for SQL actions."
"dbPassword {anchor:dbPassword}", , "(/)", "Database user password. Defaults to password."
"dbUser {anchor:dbUser}", , "(/)", "Database user name. Defaults to user."
"debug {anchor:debug}", , "(x)", "Requests detail debug output. Optional for all actions."
"driver {anchor:driver}", , "(/)", "JDBC driver class or predefined value: postgresql, mysql, mssql, oracle, or db2400. Required for SQL actions."
"encoding {anchor:encoding}", , "(/)", "Character encoding (character set) for text based file content - must be an encoding supported by your JAVA platform."
"file {anchor:file}", "f", "(/)", "Path to file based content or result output. Use - for standard input."
"findReplace {anchor:findReplace}", , "(/)", "Find and replace text. Comma separated list of colon separated pairs. Single quote values containing a delimiter. Embedded         quotes must be doubled."
"findReplaceRegex {anchor:findReplaceRegex}", , "(/)", "Find and replace text with a regular expression. Comma separated list of colon separated pairs. Single quote values         containing a delimiter. Embedded quotes must be doubled."
"help {anchor:help}", , "(x)", "Prints this help message."
"host {anchor:host}", , "(/)", "Database host server for SQL actions. Not used if url is provided. (default: localhost)"
"list {anchor:list}", , "(/)", "Comma separated list of entries. Single quote values containing a delimiter. Embedded quotes must be doubled."
"login {anchor:login}", , "(/)", "Login token from previous login request."
"loginFromStandardInput {anchor:loginFromStandardInput}", "l", "(x)", "Get login token from standard input."
"outputFormat {anchor:outputFormat}", , "(/)", "Specify output format for an action. (default: 1)"
"password {anchor:password}", "p", "(/)", "User password for remote login."
"path {anchor:path}", , "(/)", "Path - either a file or directory."
"port {anchor:port}", , "(/)", "Database host port for SQL actions. Optional, defaults to database default. Not used if url is provided."
"propertyFile {anchor:propertyFile}", , "(/)", "Property file with mapping information."
"query {anchor:query}", , "(/)", "EyeQL query."
"quiet {anchor:quiet}", , "(x)", "Limit some output messages. Optional for all actions."
"repository {anchor:repository}", , "(/)", "Repository name."
"revision {anchor:revision}", , "(/)", "Revision."
"server {anchor:server}", "s", "(/)", "Server URL."
"service {anchor:service}", , "(/)", "Service address extension. (default: /api/rest/)"
"simulate {anchor:simulate}", , "(x)", "Simulate running actions. Log the action that would be taken."
"sql {anchor:sql}", , "(/)", "SQL select statement used to generate a run script."
"url {anchor:url}", , "(/)", "Action specific setting. Example: Database access url for SQL actions. Optional when host is provided."
"user {anchor:user}", "u", "(/)", "User name for remote login. (default: automation)"
"verbose {anchor:verbose}", "v", "(x)", "Requests verbose output to help with problem determination. Optional for all actions."
{csv}

